# для локального запуска
#spring:
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            issuer-uri: http://localhost:8080/realms/microservices-realm
#            token-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/token
#            user-name-attribute: preferred_username
#        registration:
#          keycloak:
#            client-id: spring-microservices
#            client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
#            authorization-grant-type: authorization_code
#            scope: openid
#      resourceserver:
#        jwt:
#          jwk-set-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/certs
#  cloud:
#    gateway:
#      default-filters:
#        - TokenRelay=
#      routes:
#        - id: order-service
#          uri: http://localhost:8180
#          predicates:
#            - Path=/order/api/v1/**
#          filters:
#            - PreserveHostHeader
#        - id: order-service-docs
#          uri: http://localhost:8180
#          predicates:
#            - Path=/order/v3/api-docs/**
#          filters:
#            - RewritePath=/order/(?<segment>.*), /$\{segment}
#            - PreserveHostHeader
#        - id: shop-service
#          uri: http://localhost:8181
#          predicates:
#            - Path=/shop/api/v1/**
#          filters:
#            - PreserveHostHeader
#        - id: shop-service-docs
#          uri: http://localhost:8181
#          predicates:
#            - Path=/shop/v3/api-docs/**
#          filters:
#            - RewritePath=/shop/(?<segment>.*), /$\{segment}
#            - PreserveHostHeader
#        - id: payment-service
#          uri: http://localhost:8182
#          predicates:
#            - Path=/payment/api/v1/**
#          filters:
#            - PreserveHostHeader
#        - id: payment-service-docs
#          uri: http://localhost:8182
#          predicates:
#            - Path=/payment/v3/api-docs/**
#          filters:
#            - RewritePath=/payment/(?<segment>.*), /$\{segment}
#            - PreserveHostHeader
#    loadbalancer:
#      retry:
#        enabled: true
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    service-url:
#      register-with-eureka: true
#      fetch-registry: true
#      defaultZone: http://localhost:8070/eureka
#server:
#  port: 8072
#logging:
#  level:
#    org.springframework.security: TRACE
#JWT_PUBLIC_KEY: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAus5oDGGeMlx8oB6a7NB9iyIIzFexizkhLW0M+G6Gy5elgHzbZdVey9tqtEGan2dfudUIN1hZeOumQYFYjnfeLHx88EMmSaOzM+8wf9tpBcZt0O60d1mffnJ8LHQCqqzLytB2nHvU5wZDrtwhkvoJTMrdhoyTrVeXpsXTzoni92M5UPz17g+NqiE3o+/SopFrPuCTMFT9IpMIWe16+Y5Zf3Qg87LduzMcJT9eDxOEbO9HG/A6YTdxbooiAHqATfOpWFTxX3CwoTP7MXA6wEeqCUbVN+5iL8EVFWL0wIOwxxCMTVrE5ZtVFSWt5Id0ZgkblY6576wxPHGomQqw2M2ztQIDAQAB"
#springdoc:
#  swagger-ui:
#    path: /swagger-ui.html
#    oauth:
#      client-id: spring-microservices
#      client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
#      scopes: openid,profile
#      use-pkce-with-authorization-code-grant: true
#    urls:
#      - url: /order/v3/api-docs
#        name: Order Service
#      - url: /shop/v3/api-docs
#        name: Shop Service
#      - url: /payment/v3/api-docs
#        name: Payment Service

spring:
  zipkin:
    base-url: http://zipkin:9411/
    sender:
      type: web
  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/auth
            token-uri: http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/userinfo
            jwk-set-uri: http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/certs
            user-name-attribute: preferred_username
        registration:
          keycloak:
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-id: spring-microservices
            client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
            authorization-grant-type: authorization_code
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/certs
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      default-filters:
        - TokenRelay=
      routes:
        - id: keycloak-auth
          uri: http://keycloak:8080
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /${segment}
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order/api/v1/**
          filters:
            - PreserveHostHeader
        - id: order-service-docs
          uri: lb://order-service
          predicates:
            - Path=/order/v3/api-docs/**
          filters:
            - RewritePath=/order/(?<segment>.*), /${segment}
            - PreserveHostHeader
        - id: shop-service
          uri: lb://shop-service
          predicates:
            - Path=/shop/api/v1/**
          filters:
            - PreserveHostHeader
        - id: shop-service-docs
          uri: lb://shop-service
          predicates:
            - Path=/shop/v3/api-docs/**
          filters:
            - RewritePath=/shop/(?<segment>.*), /${segment}
            - PreserveHostHeader
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment/api/v1/**
          filters:
            - PreserveHostHeader
        - id: payment-service-docs
          uri: lb://payment-service
          predicates:
            - Path=/payment/v3/api-docs/**
          filters:
            - RewritePath=/payment/(?<segment>.*), /${segment}
            - PreserveHostHeader
    loadbalancer:
      retry:
        enabled: true
eureka:
  client:
    register-with-eureka: true
    fetch-registry:    true
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
server:
  port: 8072
JWT_PUBLIC_KEY: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAus5oDGGeMlx8oB6a7NB9iyIIzFexizkhLW0M+G6Gy5elgHzbZdVey9tqtEGan2dfudUIN1hZeOumQYFYjnfeLHx88EMmSaOzM+8wf9tpBcZt0O60d1mffnJ8LHQCqqzLytB2nHvU5wZDrtwhkvoJTMrdhoyTrVeXpsXTzoni92M5UPz17g+NqiE3o+/SopFrPuCTMFT9IpMIWe16+Y5Zf3Qg87LduzMcJT9eDxOEbO9HG/A6YTdxbooiAHqATfOpWFTxX3CwoTP7MXA6wEeqCUbVN+5iL8EVFWL0wIOwxxCMTVrE5ZtVFSWt5Id0ZgkblY6576wxPHGomQqw2M2ztQIDAQAB"
springdoc:
  webjars:
    prefix: /webjars
  swagger-ui:
    path: /swagger-ui.html
    oauth2-redirect-url: /webjars/swagger-ui/oauth2-redirect.html
    oauth:
      client-id: spring-microservices
      client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
      scopes: openid,profile
      use-pkce-with-authorization-code-grant: true
    urls:
      - url: /order/v3/api-docs
        name: Order Service
      - url: /shop/v3/api-docs
        name: Shop Service
      - url: /payment/v3/api-docs
        name: Payment Service
management:
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  tracing:
    sampling:
      probability: 0.1
  prometheus:
    metrics:
      export:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,trace
  endpoint:
    prometheus:
      access: unrestricted
logging:
  level:
    root: INFO
  logstash:
    host: logstash
    port: 5000