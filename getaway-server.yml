spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/microservices-realm
            token-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/token
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: spring-microservices
            client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
            authorization-grant-type: authorization_code
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/certs
  cloud:
    gateway:
      default-filters:
        - TokenRelay=
      routes:
        - id: order-service
          uri: lb://order-service/
          predicates:
            - Path=/order/**
          filters:
            - StripPrefix=1
        - id: shop-service
          uri: lb://shop-service/
          predicates:
            - Path=/shop/**
          filters:
            - StripPrefix=1
    loadbalancer:
      retry:
        enabled: true
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://localhost:8070/eureka
server:
  port: 8072
logging:
  level:
    org.springframework.security: TRACE