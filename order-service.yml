spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/microservices-realm
            token-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/token
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: spring-microservices
            client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
            authorization-grant-type: client_credentials
            scope: openid
  cloud:
    openfeign:
      oauth2:
        clientRegistrationId: keycloak
        enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/OrderServiceDB
    username: postgres
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
keycloak:
  token-uri: http://localhost:8080/realms/microservices-realm/protocol/openid-connect/token
  client-id: spring-microservices
  client-secret: apIkjKljSVdsDtzUknhm8AKIFECM2AfX
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://localhost:8070/eureka
server:
  port: 8180